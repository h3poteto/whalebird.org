version: 2
jobs:
  build:
    docker:
      - image: h3poteto/rails:v2.6.3-slim-buster
        environment:
          BUNDLE_APP_CONFIG: /usr/src/app/.bundle
          DB_HOST: 127.0.0.1
          # MySQLの起動チェック用
          HEALTH_CHECK_RETRY_LIMIT: 10
          HEALTH_CHECK_RETRY_WAIT: 3
      - image: postgres:11.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: whalebirdorg
    working_directory: /usr/src/app
    steps:
      - checkout
      - restore_cache:
          name: Restoring Cache - bundle
          keys:
            - bundle-ruby263-{{ checksum "Gemfile" }}-{{ checksum "Gemfile.lock" }}
            - bundle-ruby263-{{ checksum "Gemfile" }}-
      - run:
          name: Bundle install
          command: bundle install --path vendor/bundle
      - save_cache:
          name: Saving Cache - bundle
          key: bundle-ruby263-{{ checksum "Gemfile" }}-{{ checksum "Gemfile.lock" }}
          paths:
            - "vendor/bundle"

      - run:
          name: Migrate database
          command: |
            bundle exec rake db:create RAILS_ENV=test
            bundle exec rake db:migrate RAILS_ENV=test
      - run:
          name: Test
          command: bundle exec rspec

  image:
    machine: true
    steps:
      - checkout
      - run:
          name: Check docker version
          command: docker version
      - run:
          name: Docker build
          command: |
            docker build -t $AWS_ECR_REPOSITORY:$CIRCLE_SHA1 .
            docker tag $AWS_ECR_REPOSITORY:$CIRCLE_SHA1 $AWS_ECR_REPOSITORY:latest
      - run:
          name: Docker push
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
            docker push $AWS_ECR_REPOSITORY:$CIRCLE_SHA1
            docker push $AWS_ECR_REPOSITORY:latest

  deploy:
    docker:
      - image: h3poteto/kubectl:latest
        environment:
          CLUSTER_NAME: external-prd.k8s.h3poteto.dev
    working_directory: /var/opt/kube
    steps:
      - run:
          name: entrypoint
          command: |
            /var/opt/kube/entrypoint.sh
      - run:
          name: install kube-job
          command: |
            wget https://github.com/h3poteto/kube-job/releases/download/v0.3.0/kube-job_0.3.0_linux_amd64.zip
            unzip kube-job_0.3.0_linux_amd64.zip
            ./kube-job version
      - run:
          name: Clone k8s services
          command: |
            git clone https://github.com/h3poteto/k8s-services.git
      - run:
          name: Version
          command: |
            kubectl version
      - run:
          name: migration
          command: |
            ./kube-job run --config=$HOME/.kube/config --template-file=k8s-services/external-prd/whalebirdorg/job.yml --args="bundle exec rake db:migrate" --container="rails" --cleanup="all"
      - run:
          name: deploy
          command: |
            kubectl patch -f k8s-services/external-prd/whalebirdorg/deployment.yml -p "{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"rails\",\"image\":\"${AWS_ECR_REPOSITORY}:${CIRCLE_SHA1}\"}]}}}}"



workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - image:
          filters:
            branches:
              only:
                - master
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - build
            - image
