version: 2
jobs:
  build:
    docker:
      - image: h3poteto/rails:v2.3.4
        environment:
          BUNDLE_APP_CONFIG: /usr/src/app/.bundle
          DB_HOST: 127.0.0.1
          # MySQLの起動チェック用
          HEALTH_CHECK_RETRY_LIMIT: 10
          HEALTH_CHECK_RETRY_WAIT: 3
      - image: mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    working_directory: /usr/src/app
    steps:
      - checkout
      - restore_cache:
          name: Restoring Cache - bundle
          keys:
            - bundle-{{ checksum "Gemfile" }}-{{ checksum "Gemfile.lock" }}
            - bundle-{{ checksum "Gemfile" }}-
      - run:
          name: Bundle install
          command: bundle install --path vendor/bundle
      - save_cache:
          name: Saving Cache - bundle
          key: bundle-{{ checksum "Gemfile" }}-{{ checksum "Gemfile.lock" }}
          paths:
            - "vendor/bundle"
      - run:
          name: Checking mysql connection
          command: |
            for i in $(seq $HEALTH_CHECK_RETRY_LIMIT)
            do
              mysql -u root -h 127.0.0.1 -e 'show databases' || (sleep $HEALTH_CHECK_RETRY_WAIT; false) && break
            done
      - run:
          name: Migrate database
          command: |
            bundle exec rake db:create RAILS_ENV=test
            bundle exec rake db:migrate RAILS_ENV=test
      - run:
          name: Test
          command: bundle exec rspec

  deploy:
    docker:
      - image: h3poteto/rails:v2.3.4
        user: root
        environment:
          AWS_ECR_REPOSITORY: 564677439943.dkr.ecr.ap-northeast-1.amazonaws.com/h3poteto/whalebirdorg
    working_directory: /usr/src/app
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
          exclusive: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.09.0-ce"
            curl -L 0 /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Install aws command
          command: |
            apt-get update && apt-get install -y python-pip
            pip install awscli
      - run:
          name: Build and push
          command: |
            $(aws ecr get-login --region ap-northeast-1)
            docker build -t $AWS_ECR_REPOSITORY:latest .
            docker push $AWS_ECR_REPOSITORY:latest
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - build
